Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000 
	


2. Find the total number of distinct records for the primary keys in each of the tables listed below:

i. Business = 10000 
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537(user_id)/3979(business_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	






3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:No.
	
	
	SQL code used to arrive at answer:

Select count(*)

From User

Where 
id is null or name is null or review_count is null

or yelping_since is null or useful is null 
or funny is null
or cool is null or fans is null 
or average_stars is null
 or compliment_hot is null 
or compliment_more is null
 or compliment_profile is null 
or compliment_cute is null 
or compliment_list is null 
or compliment_note is null 
or compliment_plain is null 
or compliment_cool is null
 or compliment_funny is null 
or compliment_writer is null 
or compliment_photos is null;
	
	
+----------+
| count(*) |
+----------+
|        0 |
+----------+

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:	3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg:	3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:	0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:	1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:	24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

Select city,sum(review_count)

From business

Group by city

Order by sum(review_count) desc;
	
	
	Copy and Paste the Result Below:

+-----------------+-------------------+
| city            | sum(review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montr¨¦al        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

Select stars,count(id)

From business

Where city = 'Avon'

Group by stars

Order by stars desc;


Copy and Paste the Resulting Table Below (2 columns ?star rating and count):

+-------+-----------+
| stars | count(id) |
+-------+-----------+
|   5.0 |         1 |
|   4.5 |         1 |
|   4.0 |         2 |
|   3.5 |         3 |
|   2.5 |         2 |
|   1.5 |         1 |
+-------+-----------+


ii. Beachwood

SQL code used to arrive at answer:

Select stars,count(id)

From business

Where city = 'Beachwood'

Group by stars

Order by stars desc;


Copy and Paste the Resulting Table Below (2 columns ?star rating and count):
		
+-------+-----------+
| stars | count(id) |
+-------+-----------+
|   5.0 |         5 |
|   4.5 |         2 |
|   4.0 |         1 |
|   3.5 |         2 |
|   3.0 |         2 |
|   2.5 |         1 |
|   2.0 |         1 |
+-------+-----------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

Select name, review_count

From user

Order by review_count desc

Limit 3;
	
		
	Copy and Paste the Result Below:

+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

Solution: Yes, these two features do have correlation with each other.

Select 

avg(fans)

, Case 

When review_count < 500 Then 'small'

When review_count >= 500 and review_count < 1000 Then 'medium'

When review_count > 1000 Then 'large'
Else 'other'

End review_count_curve

From user

Group by review_count_curve;

+---------------+--------------------+
|     avg(fans) | review_count_curve |
+---------------+--------------------+
|       129.625 | large              |
|          76.4 | medium             |
| 1.08551045016 | small              |
+---------------+--------------------+

By this table, we can see the average fans number increasing with the review number.

So,posing more reviews correlate with more fans.


	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:"love" has 1780, more than "hate" which has 232.

	
	SQL code used to arrive at answer:

Select count(text)

From review

Where text like '%love%' or '%love' or 'love%';

+-------------+
| count(text) |
+-------------+
|        1780 |
+-------------+

Select count(text)

From review

Where text like '%hate%' or '%hate' or 'hate%';

+-------------+
| count(text) |
+-------------+
|         232 |
+-------------+

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

Select name, fans


From user


Order by fans desc


Limit 10;
	
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as useful?or funny?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:

	Select name,fans,useful,funny

	From user

	Order by fans desc
	
Limit 10;
	
	Copy and Paste the Result Below:

+-----------+------+--------+--------+
| name      | fans | useful |  funny |
+-----------+------+--------+--------+
| Amy       |  503 |   3226 |   2554 |
| Mimi      |  497 |    257 |    138 |
| Harald    |  311 | 122921 | 122419 |
| Gerald    |  253 |  17524 |   2324 |
| Christine |  173 |   4834 |   6646 |
| Lisa      |  159 |     48 |     13 |
| Cat       |  133 |   1062 |    672 |
| William   |  126 |   9363 |   9361 |
| Fran      |  124 |   9851 |   7606 |
| Lissa     |  120 |    455 |    150 |
+-----------+------+--------+--------+
	
	
	Please explain your findings and interpretation of the results:
	
top 10 users, with the highest number of fans, are all also listed as useful and funny.
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	

i. Do the two groups you chose to analyze have a different distribution of hours?


Select b.stars, h.hours

From business as b 

Join hours as h

On b.id = h.business_id

Where b.city = 'Edinburgh'
Order by b.stars;

+-------+-----------------------+
| stars | hours                 |
+-------+-----------------------+
|   2.0 | Sunday|22:30-3:00     |
|   2.0 | Friday|22:00-3:00     |
|   2.0 | Saturday|22:00-3:00   |
|   2.0 | Thursday|22:30-3:00   |
|   3.5 | Monday|9:00-18:00     |
|   3.5 | Tuesday|9:00-18:00    |
|   3.5 | Friday|9:00-18:00     |
|   3.5 | Wednesday|9:00-18:00  |
|   3.5 | Thursday|9:00-18:00   |
|   3.5 | Saturday|9:00-18:00   |
|   4.0 | Monday|12:00-22:30    |
|   4.0 | Tuesday|12:00-22:30   |
|   4.0 | Friday|12:00-22:30    |
|   4.0 | Wednesday|12:00-22:30 |
|   4.0 | Thursday|12:00-22:30  |
|   4.0 | Sunday|12:00-22:30    |
|   4.0 | Saturday|12:00-22:30  |
+-------+-----------------------+

It seems group with high stars is more likely to open from afternoon till night. 



 

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes, the group with more stars also has more review_count.

+---------------------+-------------+
| avg(b.review_count) | stars_curve |
+---------------------+-------------+
|                 6.0 | other       |
|                11.0 | stars_2_3   |
|                37.0 | stars_4_5   |
+---------------------+-------------+

Code:
Select
avg(b.review_count)

,Case 

When b.stars >= 2 and b.stars <= 3 Then 'stars_2_3'

When b.stars >= 4 and b.stars <= 5 Then 'stars_4_5'

Else 'other'

End stars_curve

From business as b

Join hours as h

On b.id = h.business_id

Where b.city = 'Edinburgh'
Group by stars_curve;



         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

+---------------+----------------------------------+-------+
| neighborhood  | address                          | stars |
+---------------+----------------------------------+-------+
| Eastside      | 3808 E Tropicana Ave             |   2.5 |
|               | 5045 W Tropicana Ave             |   3.0 |
| Southeast     | 3421 E Tropicana Ave, Ste I      |   3.5 |
| Southwest     | 4785 Blue Diamond Rd             |   3.5 |
| Southeast     | 8975 S Eastern Ave, Ste 3-B      |   4.0 |
| Centennial    | 7350 W Centennial Pkwy           |   4.0 |
| Summerlin     | 1910 Village Center Cir, Unit 1  |   4.0 |
| Summerlin     | 2085 Village Center Cir, Ste 120 |   4.0 |
| Chinatown     | 5040 Spring Mountain Rd          |   4.0 |
| Spring Valley | 6070 S Rainbow Blvd, Ste 10      |   4.0 |
|               | 1000 Scenic Loop Dr              |   4.5 |
|               | 2315 Highland Dr                 |   5.0 |
|               | 3555 W Reno Ave, Ste F           |   5.0 |
+---------------+----------------------------------+-------+

Some neighboor have more good yelp business.

SQL code used for analysis:

Select distinct neighborhood, address,stars
From business as b 

Join hours as h

On b.id = h.business_id

Where b.city = 'Las Vegas'

Order by b.stars;

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:Still open ones have higher stars than closed ones.
         
         
ii. Difference 2:Still open ones have more review count than closed ones.
         
         
         
SQL code used for analysis:

Select is_open,avg(stars),avg(review_count)

From business 

Group by is_open;

+---------+---------------+-------------------+
| is_open |    avg(stars) | avg(review_count) |
+---------+---------------+-------------------+
|       0 | 3.52039473684 |     23.1980263158 |
|       1 | 3.67900943396 |     31.7570754717 |
+---------+---------------+-------------------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

	predicting the overall star rating for a business by its state
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

	I will choose the business table, because it has the business's kinds of information and number of stars.
                           
                  
iii. Output of your finished dataset:

+-------+---------------+
| state | NumberOfStars |
+-------+---------------+
| ST    | High          |
| C     | Low           |
| NI    | Low           |
| ON    | Low           |
| AZ    | Medium        |
| BW    | Medium        |
| EDH   | Medium        |
| ELN   | Medium        |
| ESX   | Medium        |
| FIF   | Medium        |
| HLD   | Medium        |
| IL    | Medium        |
| MLN   | Medium        |
| NC    | Medium        |
| NV    | Medium        |
| NY    | Medium        |
| NYK   | Medium        |
| OH    | Medium        |
| PA    | Medium        |
| QC    | Medium        |
| SC    | Medium        |
| WI    | Medium        |
| WLN   | Medium        |
+-------+---------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

Select 

distinct state

,Case 

When avg(stars) < 3.5 Then 'Low'

When avg(stars) >= 3.5 and avg(stars) < 5 Then 'Medium'

Else 'High'

End NumberOfStars

From business

Group by state

Order by NumberOfStars;
